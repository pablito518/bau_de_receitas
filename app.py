import streamlit as st
# from datetime import date # Import if date is needed by agent prompts again
# Import necessary components from utils and agents
from utils import client, call_agent, format_markdown_output, sanitize_filename
from agents import create_agente_buscador, create_agente_planejador, create_agente_redator


# --- Streamlit App Layout ---
st.set_page_config(page_title="Ba√∫ de Ingrediente - Forja de Receitas √âpicas", layout="wide")

# Cabe√ßalho principal da aplica√ß√£o
st.title("‚öîÔ∏è Ba√∫ de Ingrediente ‚öîÔ∏è")

st.write("""
Bem-vindo ao Ba√∫ de Ingredientes! Entre na Forja de F√≥rmulas √âpicas!
Informe os ingredientes que voc√™ possui em seu invent√°rio, e nossos Mestres Culin√°rios Alquimistas conjurar√£o uma receita exclusiva para voc√™.
""")
st.markdown("---")

# Container principal da Forja (semelhante ao .forja-container do HTML)
with st.container():
    st.header("üî• A Forja de F√≥rmulas √âpicas üî•")

    # --- User Input ---
    # Semelhante a <label for="ingredientes"> e <textarea id="ingredientes">
    st.subheader("üìú Ingredientes em Seu Invent√°rio:")
    ingredients = st.text_area(
        "Digite os ingredientes que voc√™ tem, separados por v√≠rgula (ex: casca de ab√≥bora, talo de br√≥colis, p√£o amanhecido, cenoura murcha...)",
        height=100, # Altura similar √† textarea
        placeholder="Ex: casca de ab√≥bora, talo de br√≥colis, p√£o amanhecido, cenoura murcha..."
    )

    # --- Button to trigger the process ---
    # Semelhante a <button class="rpg-button text-xl">FORJAR RECEITA!</button>
    col1, col2, col3 = st.columns([1,2,1]) # Para centralizar o bot√£o
    with col2:
        if st.button("‚ú® FORJAR RECEITA! ‚ú®", use_container_width=True):
            if not ingredients:
                st.warning("Voc√™ esqueceu de listar os ingredientes do seu invent√°rio!")
            elif client is None:
                st.error("Erro na conex√£o com os grandes mestres alquimistas (Google API Key). Verifique as configura√ß√µes.")
            else:
                st.success(f"Excelente! Os alquimistas come√ßar√£o a forjar uma receita com: **{ingredients}**")

                recipe_post = ""
                with st.status("üîÆ Conjurando sua f√≥rmula m√°gica...", expanded=True) as status:
                    try:
                        buscador_agent = create_agente_buscador()
                        planejador_agent = create_agente_planejador()
                        redator_agent = create_agente_redator()

                        status.update(label="Passo 1: Vasculhando tomos antigos por receitas compat√≠veis...", state="running")
                        searched_recipes = call_agent(buscador_agent, f"T√≥pico: {ingredients} \n")
                        if "Error during agent run" in searched_recipes: raise Exception(searched_recipes)
                        #st.text(f"Resultado Busca:\n{searched_recipes}") # Debug
                        status.update(label="Passo 1 Conclu√≠do: Pergaminhos encontrados!", state="complete")

                        status.update(label="Passo 2: Decifrando e planejando a receita principal...", state="running")
                        recipe_plan = call_agent(planejador_agent, f"T√≥pico:{ingredients}\nLan√ßamentos buscados: {searched_recipes}")
                        if "Error during agent run" in recipe_plan: raise Exception(recipe_plan)
                        #st.text(f"Resultado Plano:\n{recipe_plan}") # Debug
                        status.update(label="Passo 2 Conclu√≠do: Plano da receita tra√ßado!", state="complete")

                        status.update(label="Passo 3: Transcrevendo o encantamento... digo, o tutorial da receita...", state="running")
                        recipe_post = call_agent(redator_agent, f"T√≥pico: {ingredients}\nPlano de post: {recipe_plan}")
                        if "Error during agent run" in recipe_post: raise Exception(recipe_post)
                        status.update(label="Passo 3 Conclu√≠do: A f√≥rmula m√°gica est√° pronta!", state="complete")

                        status.update(label="Receita gerada com sucesso!", state="complete", expanded=False)

                    except Exception as e:
                        st.error(f"Um feiti√ßo deu errado durante a conjura√ß√£o da receita: {e}")
                        status.update(label="Erro na conjura√ß√£o da receita.", state="error")

                # --- Display Result ---
                # Semelhante ao .output-header e .output-area
                st.subheader("üìñ F√≥rmula M√°gica Revelada: üìñ")
                if recipe_post and "Error during agent run" not in recipe_post:
                    # Em HTML, o <p id="receita-gerada" class="output-instruction-text"> √© substitu√≠do.
                    # Aqui, exibimos diretamente a receita.
                    st.markdown(format_markdown_output(recipe_post))
                    st.markdown("---")

                    # --- Download Button ---
                    download_filename = f"{sanitize_filename(recipe_post)}.txt"
                    st.download_button(
                        label="üìú Baixar Pergaminho da Receita",
                        data=recipe_post,
                        file_name=download_filename,
                        mime="text/plain"
                    )
                elif "Error during agent run" in recipe_post:
                     st.warning("Os alquimistas encontraram um problema e n√£o foi poss√≠vel gerar a receita. Tente ingredientes diferentes.")
                # Se recipe_post estiver vazio (e n√£o for um erro), significa que o processo n√£o chegou a gerar.
                # A mensagem de "erro na conjura√ß√£o" j√° teria sido mostrada no bloco except.

        # Se o bot√£o n√£o foi clicado, ou se os ingredientes n√£o foram fornecidos inicialmente,
        # mostrar a instru√ß√£o inicial da √°rea de output.
        # Isso √© um pouco diferente do HTML onde o JS controla a visibilidade.
        # No Streamlit, o estado √© reconstru√≠do a cada intera√ß√£o.
        # Para uma correspond√™ncia mais pr√≥xima, precisar√≠amos usar st.session_state para
        # controlar a visibilidade deste bloco de forma mais persistente.
        # No entanto, para manter a simplicidade e usar "exclusivamente componentes Streamlit"
        # da forma mais direta, esta abordagem √© razo√°vel.
        # Se quisermos exibir a mensagem "Sua receita aparecer√° aqui" ANTES do primeiro clique,
        # podemos adicionar um else ao if st.button, mas isso complicaria o estado de quando
        # a receita √© gerada ou falha.
        # Uma forma mais simples √© exibir a receita (ou erro) quando ela existir,
        # e nada espec√≠fico se ainda n√£o foi gerada (o subheader "F√≥rmula M√°gica Revelada" j√° indica a √°rea).

# Adicionando um "rodap√©" simples para tentar replicar a estrutura do HTML
st.markdown("---")
st.markdown("""
<div style="text-align: center; color: grey; font-size: 0.9em;">
    <p>&copy; 2025 Ba√∫ de Ingrediente. Todos os direitos reservados. Forjado com Magia e Aproveitamento.</p>
    <p>
        <a href="#" style="color: grey; text-decoration: none;">Pol√≠tica de Privacidade</a> |
        <a href="#" style="color: grey; text-decoration: none;">Termos de Uso</a>
    </p>
</div>
""", unsafe_allow_html=True)