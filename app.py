import streamlit as st
# from datetime import date # Import if date is needed by agent prompts again
# Import necessary components from utils and agents
from utils import client, call_agent, format_markdown_output, sanitize_filename
from agents import create_agente_buscador, create_agente_planejador, create_agente_redator


# --- CSS Styling ---
# Fun√ß√£o para carregar o CSS
def load_css(file_name="style.css"):
    try:
        with open(file_name) as f:
            st.markdown(f"<style>{f.read()}</style>", unsafe_allow_html=True)
    except FileNotFoundError:
        st.error(f"Arquivo CSS '{file_name}' n√£o encontrado. Certifique-se de que est√° na mesma pasta do script.")
    except Exception as e:
        st.error(f"Erro ao carregar CSS: {e}")

# Carrega o CSS
load_css()
# --- Streamlit App Layout ---

st.set_page_config(page_title="Ba√∫ de Receitas - Forja de Receitas √âpicas", layout="centered") # centered or wide

st.markdown(f"<style>{css_completo}</style>", unsafe_allow_html=True)



# Cabe√ßalho principal da aplica√ß√£o
st.title("‚öîÔ∏è Ba√∫ de Receitas ‚öîÔ∏è")

st.markdown("""
Bem-vindo ao Ba√∫ de Receitas! Entre na **Forja de F√≥rmulas √âpicas**!
Informe os ingredientes que voc√™ possui em seu invent√°rio, e nossos Mestres Culin√°rios Alquimistas conjurar√£o uma receita exclusiva para voc√™.
""")
st.markdown("---")

# Container principal da Forja
# O CSS .main > div.block-container j√° estiliza este container principal.
# with st.container(): # Pode adicionar outro container se precisar de mais aninhamento e estilo espec√≠fico.

st.header("üî• A Forja de F√≥rmulas √âpicas üî•")

# --- User Input ---
st.subheader("üìú Ingredientes em Seu Invent√°rio:")
ingredients = st.text_area(
    "Digite os ingredientes que voc√™ tem, separados por v√≠rgula (ex: casca de ab√≥bora, talo de br√≥colis, p√£o amanhecido, cenoura murcha...)",
    height=100,
    placeholder="Ex: casca de ab√≥bora, talo de br√≥colis, p√£o amanhecido, cenoura murcha..."
)

# Vari√°vel de sess√£o para controlar a exibi√ß√£o da mensagem inicial
if 'recipe_generated_once' not in st.session_state:
    st.session_state.recipe_generated_once = False
if 'current_recipe' not in st.session_state:
    st.session_state.current_recipe = None
if 'error_message' not in st.session_state:
    st.session_state.error_message = None


# --- Button to trigger the process ---
if st.button("‚ú® FORJAR RECEITA! ‚ú®"): # O CSS cuidar√° da centraliza√ß√£o e estilo.
    st.session_state.recipe_generated_once = True
    st.session_state.current_recipe = None # Limpa receita anterior
    st.session_state.error_message = None # Limpa erro anterior

    if not ingredients:
        st.warning("Voc√™ esqueceu de listar os ingredientes do seu invent√°rio!")
        st.session_state.error_message = "Voc√™ esqueceu de listar os ingredientes!"
    elif client is None: # Mocked as True, so this won't hit with mocks
        st.error("Erro na conex√£o com os grandes mestres alquimistas (Google API Key). Verifique as configura√ß√µes.")
        st.session_state.error_message = "Erro de configura√ß√£o dos mestres alquimistas."
    else:
        st.success(f"Excelente! Os alquimistas come√ßar√£o a forjar uma receita com: **{ingredients}**")

        recipe_post_content = ""
        with st.status("üîÆ Conjurando sua f√≥rmula m√°gica...", expanded=True) as status_ui:
            try:
                buscador_agent = create_agente_buscador()
                planejador_agent = create_agente_planejador()
                redator_agent = create_agente_redator()

                status_ui.update(label="Passo 1: Vasculhando tomos antigos por receitas compat√≠veis...", state="running")
                searched_recipes = call_agent(buscador_agent, f"T√≥pico: {ingredients} \n")
                if "Error during agent run" in searched_recipes: raise Exception(searched_recipes)
                status_ui.update(label="Passo 1 Conclu√≠do: Pergaminhos encontrados!", state="complete")

                status_ui.update(label="Passo 2: Decifrando e planejando a receita principal...", state="running")
                recipe_plan = call_agent(planejador_agent, f"T√≥pico:{ingredients}\nLan√ßamentos buscados: {searched_recipes}")
                if "Error during agent run" in recipe_plan: raise Exception(recipe_plan)
                status_ui.update(label="Passo 2 Conclu√≠do: Plano da receita tra√ßado!", state="complete")

                status_ui.update(label="Passo 3: Transcrevendo o encantamento... digo, o tutorial da receita...", state="running")
                recipe_post_content = call_agent(redator_agent, f"T√≥pico: {ingredients}\nPlano de post: {recipe_plan}")
                if "Error during agent run" in recipe_post_content: raise Exception(recipe_post_content)
                status_ui.update(label="Passo 3 Conclu√≠do: A f√≥rmula m√°gica est√° pronta!", state="complete")
                
                st.session_state.current_recipe = recipe_post_content
                status_ui.update(label="Receita gerada com sucesso!", state="complete", expanded=False)

            except Exception as e:
                error_str = f"Um feiti√ßo deu errado durante a conjura√ß√£o da receita: {e}"
                st.error(error_str)
                st.session_state.error_message = error_str
                status_ui.update(label="Erro na conjura√ß√£o da receita.", state="error")

# --- Display Result or Initial Placeholder ---
st.subheader("üìñ F√≥rmula M√°gica Revelada: üìñ")

if st.session_state.current_recipe:
    st.markdown(format_markdown_output(st.session_state.current_recipe))
    st.markdown("---")
    download_filename = f"{sanitize_filename(st.session_state.current_recipe)}.txt"
    st.download_button(
        label="üìú Baixar Pergaminho da Receita",
        data=st.session_state.current_recipe,
        file_name=download_filename,
        mime="text/plain"
    )
elif st.session_state.error_message and st.session_state.error_message != "Voc√™ esqueceu de listar os ingredientes!":
    # Mensagem de erro j√° exibida pelo st.error() ou st.warning()
    # Mas podemos adicionar um placeholder se quisermos
    st.info("Aguardando novos ingredientes para uma nova tentativa de forja...")
elif not st.session_state.recipe_generated_once:
    st.info(
        """
        Sua receita √©pica aparecer√° aqui ap√≥s a forja!
        Prepare seus utens√≠lios e acenda o fogo do drag√£o!
        """
    )
else: # Foi clicado, mas houve erro de input ou a receita est√° vazia por algum motivo
    if not st.session_state.error_message : # Se n√£o h√° mensagem de erro espec√≠fica, mas n√£o h√° receita
         st.info("Os ventos da magia est√£o parados... Insira ingredientes para come√ßar a forja!")


# Adicionando um "rodap√©" simples
st.markdown("---")
st.markdown("""
<div class="footer-custom" style="text-align: center;">
    <p>&copy; 2025 Ba√∫ de Ingrediente. Todos os direitos reservados. Forjado com Magia e Aproveitamento.</p>
    <p>
        <a href="#">Pol√≠tica de Privacidade</a> |
        <a href="#">Termos de Uso</a>
    </p>
</div>
""", unsafe_allow_html=True)
